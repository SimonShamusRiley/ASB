% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_vcomp.R
\name{eblup}
\alias{eblup}
\title{Calculate EBLUPs, contrasts, and other linear functions for a fitted
\code{nlme::lme()} \code{lme4::lmer()} model}
\usage{
eblup(object, predictions, df = NULL)
}
\arguments{
\item{object}{A fitted \code{\link[nlme]{lme}} or \code{\link[lme4]{lmer}} model}

\item{predictions}{Either a numeric vector or matrix specifying predictions to make and
test, or a (optionally) named list of such matrices or vectors.}
}
\value{
A list of one or two data frames corresponding to the single and multiple
degree of freedom predictions/contrasts, respectively.
}
\description{
Uses the methods described in Appendix A of Stroup et al. (2018) to
calculate marginal means, EBLUPs, or single degree of freedom contrasts, along with
their "standard errors" (the square root of the estimated projection variance), t
statistics and p-values or - in the case of multiple degree of freedom contrasts -
the F-statistic and p-value of the test.
}
\details{
The predictions to be calculated must be supplied in the form of a named list,
with each list item consisting of a contrast specification. The contrast coefficients
must be ordered as per the results generated from a call to \code{eblup_terms()},
which accounts for the fact that the model will be refitted (if necessary) using
sum-to-zero contrasts and that the Z matrix, and thus the projection matrix, are
constructed such that the ordering of terms may not agree with that generated from a
call to fixef and/or ranef. Note that this implies that how a given prediction is
specified with differ depending If a matrix is supplied, each row is taken to be a
seperate contrast specification and an F-test is conducted.

Note that Stroup et al. (2018) advise that prediction variance estimates (and thus
the "standard error" in the function's output) tend to be downwardly biased,
sometimes severely so.
}
\examples{
library(HGSB)
\dontrun{library(nlme)}

#Example drawn from page 313 of Stroup et al. (2018):
breeding <- data.frame(sire = rep(1:5, each = 4),
                      dam = rep(c(1, 1, 2, 2), 5),
                      adg = c(2.24, 1.85, 2.05, 2.41, 1.99, 1.93, 2.72,
                              2.32, 2.33, 2.68, 2.69, 2.71, 2.42, 2.01,
                              1.86, 1.79, 2.82, 2.64, 2.58, 2.56))

pred.list <- list('sire 1 BLUP "broad"' = c(1,
                                           1, 0, 0, 0, 0,
                                           0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
                 'sire 1 BLUP "narrow"' = c(2,
                                            2, 0, 0, 0, 0,
                                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0)/2,
                 'sire 1 BLUP dam 1' = c(1,
                                         1, 0, 0, 0, 0,
                                         1, 0, 0, 0, 0, 0, 0, 0, 0, 0))

fit <- lme(adg ~ 1, breeding, ~ 1|sire/dam)

# Predictions are identical, but standard errors lack Kenward-Roger adjustment
# and degrees of freedom differ and must be set manually
eblup(fit, pred.list, df = 4)


}
\references{
Stroup, W., Milliken, G., Claasen, E., Wolfinger, R. (2018).
"SAS for Mixed Models: Introduction and Basic Applications". Cary, NC: SAS
Institute, Inc.
}
